{"version":3,"file":"UserStatistics-53e14ee9.js","sources":["../../assets/icons/icon-how-to.svg","../../assets/icons/icon-research.svg","../../src/UserStatistics/UserStatistics.tsx"],"sourcesContent":["export default \"__VITE_ASSET__53d84e4c__\"","export default \"__VITE_ASSET__708aeca8__\"","import { Box, Card, Flex } from 'theme-ui'\n\nimport HowToCountIcon from '../../assets/icons/icon-how-to.svg'\nimport ResearchIcon from '../../assets/icons/icon-research.svg'\nimport starActiveSVG from '../../assets/icons/icon-star-active.svg'\nimport { ElWithBeforeIcon } from '../ElWithBeforeIcon/ElWithBeforeIcon'\nimport { ExternalLink } from '../ExternalLink/ExternalLink'\nimport { Icon } from '../Icon/Icon'\nimport { InternalLink } from '../InternalLink/InternalLink'\n\nexport interface UserStatisticsProps {\n  userName: string\n  country?: string\n  isVerified: boolean\n  isSupporter?: boolean\n  howtoCount: number\n  usefulCount: number\n  researchCount: number\n}\n\nexport const UserStatistics = (props: UserStatisticsProps) => {\n  const hasLocation =\n    props.country !== undefined && props.userName !== undefined\n\n  if (isEmpty(props) && !hasLocation) {\n    return null\n  }\n\n  return (\n    <Card\n      sx={{\n        p: 2,\n        backgroundColor: 'background',\n      }}\n    >\n      <Flex\n        sx={{\n          gap: 2,\n          flexDirection: 'column',\n        }}\n      >\n        {props.isVerified && (\n          <Flex data-testid=\"verified-stat\">\n            <Icon glyph=\"verified\" size={22} />\n            <Box ml={1}>Verified</Box>\n          </Flex>\n        )}\n\n        {props?.isSupporter ? (\n          <Flex data-testid=\"supporter-stat\">\n            <Icon glyph={'supporter'} size={22} />\n            <Box ml={1}>\n              <ExternalLink\n                href=\"https://www.patreon.com/one_army\"\n                target=\"_blank\"\n                sx={{ color: 'black' }}\n              >\n                Supporter\n              </ExternalLink>\n            </Box>\n          </Flex>\n        ) : null}\n\n        {hasLocation ? (\n          <InternalLink\n            to={'/map/#' + props.userName}\n            sx={{ color: 'black' }}\n            data-testid=\"location-link\"\n          >\n            <Flex>\n              <Icon glyph=\"location-on\" size={22} />\n              <Box ml={1}>{props.country || 'View on Map'}</Box>\n            </Flex>\n          </InternalLink>\n        ) : null}\n\n        {props.usefulCount ? (\n          <Flex data-testid=\"useful-stat\">\n            <ElWithBeforeIcon icon={starActiveSVG} />\n            Useful:&nbsp;{props.usefulCount}\n          </Flex>\n        ) : null}\n\n        {props.howtoCount ? (\n          <InternalLink\n            to={'/how-to?q=' + props.userName}\n            sx={{ color: 'black' }}\n            data-testid=\"howto-link\"\n          >\n            <Flex data-testid=\"howto-stat\">\n              <ElWithBeforeIcon icon={HowToCountIcon} />\n              Howâ€‘to:&nbsp;{props.howtoCount}\n            </Flex>\n          </InternalLink>\n        ) : null}\n\n        {props.researchCount ? (\n          <InternalLink\n            to={'/research?q=' + props.userName}\n            sx={{ color: 'black' }}\n            data-testid=\"research-link\"\n          >\n            <Flex data-testid=\"research-stat\">\n              <ElWithBeforeIcon icon={ResearchIcon} />\n              Research:&nbsp;{props.researchCount}\n            </Flex>\n          </InternalLink>\n        ) : null}\n      </Flex>\n    </Card>\n  )\n}\n\nconst isEmpty = (props: UserStatisticsProps) =>\n  !props.isVerified &&\n  !props.isSupporter &&\n  !props.usefulCount &&\n  !props.howtoCount\n"],"names":["HowToCountIcon","ResearchIcon","UserStatistics","props","hasLocation","isEmpty","jsx","Card","jsxs","Flex","Icon","Box","ExternalLink","InternalLink","ElWithBeforeIcon","starActiveSVG"],"mappings":"wWAAA,MAAeA,EAAA,GAAA,IAAA,IAAA,2BAAA,YAAA,GAAA,EAAA,KCAAC,EAAA,GAAA,IAAA,IAAA,6BAAA,YAAA,GAAA,EAAA,KCoBRC,EAAAC,GAAA,CACL,MAAAC,EAAAD,EAAA,UAAA,QAAAA,EAAA,WAAA,OAGA,OAAAE,EAAAF,CAAA,GAAA,CAAAC,EACE,KAGFE,EACEC,EAAC,CAAA,GAAA,CACK,EAAA,EACC,gBAAA,YACc,EACnB,SAAAC,EAEAC,EAAC,CAAA,GAAA,CACK,IAAA,EACG,cAAA,QACU,EACjB,SAAA,CAECN,EAAA,YAAAK,EAAAC,EAAA,CAAA,cAAA,gBAAA,SAAA,CAEGH,EAAAI,EAAA,CAAA,MAAA,WAAA,KAAA,GAAA,EAAiCJ,EAAAK,EAAA,CAAA,GAAA,EAAA,SAAA,WAAA,CACb,EAAA,EACtBR,GAAA,MAAAA,EAAA,YAAAK,EAAAC,EAAA,CAAA,cAAA,iBAAA,SAAA,CAKEH,EAAAI,EAAA,CAAA,MAAA,YAAA,KAAA,GAAA,EAAoCJ,EAAAK,EAAA,CAAA,GAAA,EAAA,SAAAL,EAElCM,EAAC,CAAA,KAAA,mCACM,OAAA,SACE,GAAA,CAAA,MAAA,OAAA,EACc,SAAA,WACtB,CAAA,EAAA,CAGH,CAAA,CAAA,EAAA,KAEAR,EAAAE,EAGFO,EAAC,CAAA,GAAA,SAAAV,EAAA,SACsB,GAAA,CAAA,MAAA,OAAA,EACA,cAAA,gBACT,SAAAK,EAAAC,EAAA,CAAA,SAAA,CAGVH,EAAAI,EAAA,CAAA,MAAA,cAAA,KAAA,GAAA,EAAoCJ,EAAAK,EAAA,CAAA,GAAA,EAAA,SAAAR,EAAA,SAAA,cAAA,CACQ,EAAA,CAC9C,CAAA,EAAA,KAEAA,EAAA,YAAAK,EAAAC,EAAA,CAAA,cAAA,cAAA,SAAA,CAIAH,EAAAQ,EAAA,CAAA,KAAAC,CAAA,CAAA,EAAuC,WAAEZ,EAAA,WACrB,CAAA,CAAA,EAAA,KAEpBA,EAAA,WAAAG,EAGFO,EAAC,CAAA,GAAA,aAAAV,EAAA,SAC0B,GAAA,CAAA,MAAA,OAAA,EACJ,cAAA,aACT,SAAAK,EAAAC,EAAA,CAAA,cAAA,aAAA,SAAA,CAGVH,EAAAQ,EAAA,CAAA,KAAAd,CAAA,CAAA,EAAwC,WAAEG,EAAA,UACtB,EAAA,CACtB,CAAA,EAAA,KAEAA,EAAA,cAAAG,EAGFO,EAAC,CAAA,GAAA,eAAAV,EAAA,SAC4B,GAAA,CAAA,MAAA,OAAA,EACN,cAAA,gBACT,SAAAK,EAAAC,EAAA,CAAA,cAAA,gBAAA,SAAA,CAGVH,EAAAQ,EAAA,CAAA,KAAAb,CAAA,CAAA,EAAsC,aAAEE,EAAA,aAClB,EAAA,CACxB,CAAA,EAAA,IAEA,CAAA,CAAA,CACN,CAAA,CAGN,EAEAE,EAAAF,GAAA,CAAAA,EAAA,YAAA,CAAAA,EAAA,aAAA,CAAAA,EAAA,aAAA,CAAAA,EAAA"}
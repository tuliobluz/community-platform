{"version":3,"file":"TabbedContent.stories-0e6bbe34.js","sources":["../../../../node_modules/@mui/utils/esm/useControlled/useControlled.js","../../../../node_modules/@mui/base/utils/areArraysEqual.js","../../../../node_modules/@mui/base/Tabs/tabsClasses.js","../../../../node_modules/@mui/base/useTabs/useTabs.js","../../../../node_modules/@mui/base/useTabs/TabsProvider.js","../../../../node_modules/@mui/base/Tabs/Tabs.js","../../../../node_modules/@mui/base/useList/listReducer.js","../../../../node_modules/@mui/base/utils/useMessageBus.js","../../../../node_modules/@mui/base/useList/useListChangeNotifiers.js","../../../../node_modules/@mui/base/utils/useControllableReducer.js","../../../../node_modules/@mui/base/utils/useLatest.js","../../../../node_modules/@mui/base/utils/useTextNavigation.js","../../../../node_modules/@mui/base/useList/useList.js","../../../../node_modules/@mui/base/TabsList/tabsListClasses.js","../../../../node_modules/@mui/base/useTabsList/useTabsList.types.js","../../../../node_modules/@mui/base/useTabsList/tabsListReducer.js","../../../../node_modules/@mui/base/useTabsList/useTabsList.js","../../../../node_modules/@mui/base/useTabsList/TabsListProvider.js","../../../../node_modules/@mui/base/TabsList/TabsList.js"],"sourcesContent":["'use client';\n\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","export function areArraysEqual(array1, array2, itemComparer = (a, b) => a === b) {\n  return array1.length === array2.length && array1.every((value, index) => itemComparer(value, array2[index]));\n}","import { generateUtilityClass } from '../generateUtilityClass';\nimport { generateUtilityClasses } from '../generateUtilityClasses';\nexport function getTabsUtilityClass(slot) {\n  return generateUtilityClass('MuiTabs', slot);\n}\nexport const tabsClasses = generateUtilityClasses('MuiTabs', ['root', 'horizontal', 'vertical']);","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport { useCompoundParent } from '../utils/useCompound';\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabs API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tabs)\n */\nfunction useTabs(parameters) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    orientation,\n    direction,\n    selectionFollowsFocus\n  } = parameters;\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Tabs',\n    state: 'value'\n  });\n  const onSelected = React.useCallback((event, newValue) => {\n    setValue(newValue);\n    onChange == null || onChange(event, newValue);\n  }, [onChange, setValue]);\n  const {\n    subitems: tabPanels,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const tabIdLookup = React.useRef(() => undefined);\n  const getTabPanelId = React.useCallback(tabValue => {\n    var _tabPanels$get;\n    return (_tabPanels$get = tabPanels.get(tabValue)) == null ? void 0 : _tabPanels$get.id;\n  }, [tabPanels]);\n  const getTabId = React.useCallback(tabPanelId => {\n    return tabIdLookup.current(tabPanelId);\n  }, []);\n  const registerTabIdLookup = React.useCallback(lookupFunction => {\n    tabIdLookup.current = lookupFunction;\n  }, []);\n  return {\n    contextValue: _extends({\n      direction,\n      getTabId,\n      getTabPanelId,\n      onSelected,\n      orientation,\n      registerTabIdLookup,\n      selectionFollowsFocus,\n      value\n    }, compoundComponentContextValue)\n  };\n}\nexport { useTabs };","'use client';\n\nimport * as React from 'react';\nimport { TabsContext } from '../Tabs/TabsContext';\nimport { CompoundComponentContext } from '../utils/useCompound';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Sets up the contexts for the underlying Tab and TabPanel components.\n *\n * @ignore - do not document.\n */\nexport function TabsProvider(props) {\n  const {\n    value: valueProp,\n    children\n  } = props;\n  const {\n    direction,\n    getItemIndex,\n    onSelected,\n    orientation,\n    registerItem,\n    registerTabIdLookup,\n    selectionFollowsFocus,\n    totalSubitemCount,\n    value,\n    getTabId,\n    getTabPanelId\n  } = valueProp;\n  const compoundComponentContextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount\n  }), [registerItem, getItemIndex, totalSubitemCount]);\n  const tabsContextValue = React.useMemo(() => ({\n    direction,\n    getTabId,\n    getTabPanelId,\n    onSelected,\n    orientation,\n    registerTabIdLookup,\n    selectionFollowsFocus,\n    value\n  }), [direction, getTabId, getTabPanelId, onSelected, orientation, registerTabIdLookup, selectionFollowsFocus, value]);\n  return /*#__PURE__*/_jsx(CompoundComponentContext.Provider, {\n    value: compoundComponentContextValue,\n    children: /*#__PURE__*/_jsx(TabsContext.Provider, {\n      value: tabsContextValue,\n      children: children\n    })\n  });\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"value\", \"defaultValue\", \"orientation\", \"direction\", \"onChange\", \"selectionFollowsFocus\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { getTabsUtilityClass } from './tabsClasses';\nimport { useTabs } from '../useTabs';\nimport { TabsProvider } from '../useTabs/TabsProvider';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation]\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabsUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [Tabs API](https://mui.com/base-ui/react-tabs/components-api/#tabs)\n */\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      orientation = 'horizontal',\n      direction = 'ltr',\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    contextValue\n  } = useTabs(props);\n  const ownerState = _extends({}, props, {\n    orientation,\n    direction\n  });\n  const classes = useUtilityClasses(ownerState);\n  const TabsRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const tabsRootProps = useSlotProps({\n    elementType: TabsRoot,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabsRoot, _extends({}, tabsRootProps, {\n    children: /*#__PURE__*/_jsx(TabsProvider, {\n      value: contextValue,\n      children: children\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The direction of the text.\n   * @default 'ltr'\n   */\n  direction: PropTypes.oneOf(['ltr', 'rtl']),\n  /**\n   * Callback invoked when new value is being set.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Tabs.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Tabs.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `null`.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport { Tabs };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ListActionTypes } from './listActions.types';\n/**\n * Looks up the next valid item to highlight within the list.\n *\n * @param currentIndex The index of the start of the search.\n * @param lookupDirection Whether to look for the next or previous item.\n * @param items The array of items to search.\n * @param includeDisabledItems Whether to include disabled items in the search.\n * @param isItemDisabled A function that determines whether an item is disabled.\n * @param wrapAround Whether to wrap around the list when searching.\n * @returns The index of the next valid item to highlight or -1 if no valid item is found.\n */\nfunction findValidItemToHighlight(currentIndex, lookupDirection, items, includeDisabledItems, isItemDisabled, wrapAround) {\n  if (items.length === 0 || !includeDisabledItems && items.every((item, itemIndex) => isItemDisabled(item, itemIndex))) {\n    return -1;\n  }\n  let nextFocus = currentIndex;\n  for (;;) {\n    // No valid items found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === items.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n    const nextFocusDisabled = includeDisabledItems ? false : isItemDisabled(items[nextFocus], nextFocus);\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n      if (wrapAround) {\n        nextFocus = (nextFocus + items.length) % items.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\n/**\n * Gets the next item to highlight based on the current highlighted item and the search direction.\n *\n * @param previouslyHighlightedValue The item from which to start the search for the next candidate.\n * @param offset The offset from the previously highlighted item to search for the next candidate or a special named value ('reset', 'start', 'end').\n * @param context The list action context.\n *\n * @returns The next item to highlight or null if no item is valid.\n */\nexport function moveHighlight(previouslyHighlightedValue, offset, context) {\n  var _items$nextIndex;\n  const {\n    items,\n    isItemDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    itemComparer,\n    focusManagement\n  } = context;\n\n  // TODO: make this configurable\n  // The always should be an item highlighted when focus is managed by the DOM\n  // so that it's accessible by the `tab` key.\n  const defaultHighlightedIndex = focusManagement === 'DOM' ? 0 : -1;\n  const maxIndex = items.length - 1;\n  const previouslyHighlightedIndex = previouslyHighlightedValue == null ? -1 : items.findIndex(item => itemComparer(item, previouslyHighlightedValue));\n  let nextIndexCandidate;\n  let lookupDirection;\n  let wrapAround = !disableListWrap;\n  switch (offset) {\n    case 'reset':\n      if (defaultHighlightedIndex === -1) {\n        return null;\n      }\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'start':\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'end':\n      nextIndexCandidate = maxIndex;\n      lookupDirection = 'previous';\n      wrapAround = false;\n      break;\n    default:\n      {\n        const newIndex = previouslyHighlightedIndex + offset;\n        if (newIndex < 0) {\n          if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(offset) > 1) {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          } else {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          }\n        } else if (newIndex > maxIndex) {\n          if (!wrapAround || Math.abs(offset) > 1) {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          } else {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          }\n        } else {\n          nextIndexCandidate = newIndex;\n          lookupDirection = offset >= 0 ? 'next' : 'previous';\n        }\n      }\n  }\n  const nextIndex = findValidItemToHighlight(nextIndexCandidate, lookupDirection, items, disabledItemsFocusable, isItemDisabled, wrapAround);\n\n  // If there are no valid items to highlight, return the previously highlighted item (if it's still valid).\n  if (nextIndex === -1 && previouslyHighlightedValue !== null && !isItemDisabled(previouslyHighlightedValue, previouslyHighlightedIndex)) {\n    return previouslyHighlightedValue;\n  }\n  return (_items$nextIndex = items[nextIndex]) != null ? _items$nextIndex : null;\n}\n\n/**\n * Toggles the selection of an item.\n *\n * @param item Item to toggle.\n * @param selectedValues Already selected items.\n * @param selectionMode The number of items that can be simultanously selected.\n * @param itemComparer A custom item comparer function.\n *\n * @returns The new array of selected items.\n */\nexport function toggleSelection(item, selectedValues, selectionMode, itemComparer) {\n  if (selectionMode === 'none') {\n    return [];\n  }\n  if (selectionMode === 'single') {\n    // if the item to select has already been selected, return the original array\n    if (itemComparer(selectedValues[0], item)) {\n      return selectedValues;\n    }\n    return [item];\n  }\n\n  // The toggled item is selected; remove it from the selection.\n  if (selectedValues.some(sv => itemComparer(sv, item))) {\n    return selectedValues.filter(sv => !itemComparer(sv, item));\n  }\n\n  // The toggled item is not selected - add it to the selection.\n  return [...selectedValues, item];\n}\nfunction handleItemSelection(item, state, context) {\n  const {\n    itemComparer,\n    isItemDisabled,\n    selectionMode,\n    items\n  } = context;\n  const {\n    selectedValues\n  } = state;\n  const itemIndex = items.findIndex(i => itemComparer(item, i));\n  if (isItemDisabled(item, itemIndex)) {\n    return state;\n  }\n\n  // if the item is already selected, remove it from the selection, otherwise add it\n  const newSelectedValues = toggleSelection(item, selectedValues, selectionMode, itemComparer);\n  return _extends({}, state, {\n    selectedValues: newSelectedValues,\n    highlightedValue: item\n  });\n}\nfunction handleKeyDown(key, state, context) {\n  const previouslySelectedValue = state.highlightedValue;\n  const {\n    orientation,\n    pageSize\n  } = context;\n  switch (key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'start', context)\n      });\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'end', context)\n      });\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -pageSize, context)\n      });\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, pageSize, context)\n      });\n    case 'ArrowUp':\n      if (orientation !== 'vertical') {\n        break;\n      }\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -1, context)\n      });\n    case 'ArrowDown':\n      if (orientation !== 'vertical') {\n        break;\n      }\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 1, context)\n      });\n    case 'ArrowLeft':\n      {\n        if (orientation === 'vertical') {\n          break;\n        }\n        const offset = orientation === 'horizontal-ltr' ? -1 : 1;\n        return _extends({}, state, {\n          highlightedValue: moveHighlight(previouslySelectedValue, offset, context)\n        });\n      }\n    case 'ArrowRight':\n      {\n        if (orientation === 'vertical') {\n          break;\n        }\n        const offset = orientation === 'horizontal-ltr' ? 1 : -1;\n        return _extends({}, state, {\n          highlightedValue: moveHighlight(previouslySelectedValue, offset, context)\n        });\n      }\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n      return handleItemSelection(state.highlightedValue, state, context);\n    default:\n      break;\n  }\n  return state;\n}\nfunction handleBlur(state, context) {\n  if (context.focusManagement === 'DOM') {\n    return state;\n  }\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\nfunction textCriteriaMatches(nextFocus, searchString, stringifyItem) {\n  var _stringifyItem;\n  const text = (_stringifyItem = stringifyItem(nextFocus)) == null ? void 0 : _stringifyItem.trim().toLowerCase();\n  if (!text || text.length === 0) {\n    // Make item not navigable if stringification fails or results in empty string.\n    return false;\n  }\n  return text.indexOf(searchString) === 0;\n}\nfunction handleTextNavigation(state, searchString, context) {\n  const {\n    items,\n    isItemDisabled,\n    disabledItemsFocusable,\n    getItemAsString\n  } = context;\n  const startWithCurrentItem = searchString.length > 1;\n  let nextItem = startWithCurrentItem ? state.highlightedValue : moveHighlight(state.highlightedValue, 1, context);\n  for (let index = 0; index < items.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextItem || !startWithCurrentItem && state.highlightedValue === nextItem) {\n      return state;\n    }\n    if (textCriteriaMatches(nextItem, searchString, getItemAsString) && (!isItemDisabled(nextItem, items.indexOf(nextItem)) || disabledItemsFocusable)) {\n      // The nextItem is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextItem\n      });\n    }\n    // Move to the next element.\n    nextItem = moveHighlight(nextItem, 1, context);\n  }\n\n  // No item matches the text search criteria\n  return state;\n}\nfunction handleItemsChange(items, previousItems, state, context) {\n  var _state$selectedValues;\n  const {\n    itemComparer,\n    focusManagement\n  } = context;\n  let newHighlightedValue = null;\n  if (state.highlightedValue != null) {\n    var _items$find;\n    newHighlightedValue = (_items$find = items.find(item => itemComparer(item, state.highlightedValue))) != null ? _items$find : null;\n  } else if (focusManagement === 'DOM' && previousItems.length === 0) {\n    newHighlightedValue = moveHighlight(null, 'reset', context);\n  }\n\n  // exclude selected values that are no longer in the items list\n  const selectedValues = (_state$selectedValues = state.selectedValues) != null ? _state$selectedValues : [];\n  const newSelectedValues = selectedValues.filter(selectedValue => items.some(item => itemComparer(item, selectedValue)));\n  return _extends({}, state, {\n    highlightedValue: newHighlightedValue,\n    selectedValues: newSelectedValues\n  });\n}\nfunction handleResetHighlight(state, context) {\n  return _extends({}, state, {\n    highlightedValue: moveHighlight(null, 'reset', context)\n  });\n}\nexport function listReducer(state, action) {\n  const {\n    type,\n    context\n  } = action;\n  switch (type) {\n    case ListActionTypes.keyDown:\n      return handleKeyDown(action.key, state, context);\n    case ListActionTypes.itemClick:\n      return handleItemSelection(action.item, state, context);\n    case ListActionTypes.blur:\n      return handleBlur(state, context);\n    case ListActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, context);\n    case ListActionTypes.itemsChange:\n      return handleItemsChange(action.items, action.previousItems, state, context);\n    case ListActionTypes.resetHighlight:\n      return handleResetHighlight(state, context);\n    default:\n      return state;\n  }\n}","'use client';\n\nimport * as React from 'react';\nexport function createMessageBus() {\n  const listeners = new Map();\n  function subscribe(topic, callback) {\n    let topicListeners = listeners.get(topic);\n    if (!topicListeners) {\n      topicListeners = new Set([callback]);\n      listeners.set(topic, topicListeners);\n    } else {\n      topicListeners.add(callback);\n    }\n    return () => {\n      topicListeners.delete(callback);\n      if (topicListeners.size === 0) {\n        listeners.delete(topic);\n      }\n    };\n  }\n  function publish(topic, ...args) {\n    const topicListeners = listeners.get(topic);\n    if (topicListeners) {\n      topicListeners.forEach(callback => callback(...args));\n    }\n  }\n  return {\n    subscribe,\n    publish\n  };\n}\n\n/**\n * @ignore - internal hook.\n */\nexport function useMessageBus() {\n  const bus = React.useRef();\n  if (!bus.current) {\n    bus.current = createMessageBus();\n  }\n  return bus.current;\n}","'use client';\n\nimport * as React from 'react';\nimport { useMessageBus } from '../utils/useMessageBus';\nconst SELECTION_CHANGE_TOPIC = 'select:change-selection';\nconst HIGHLIGHT_CHANGE_TOPIC = 'select:change-highlight';\n/**\n * @ignore - internal hook.\n *\n * This hook is used to notify any interested components about changes in the list's selection and highlight.\n */\nexport function useListChangeNotifiers() {\n  const messageBus = useMessageBus();\n  const notifySelectionChanged = React.useCallback(newSelectedItems => {\n    messageBus.publish(SELECTION_CHANGE_TOPIC, newSelectedItems);\n  }, [messageBus]);\n  const notifyHighlightChanged = React.useCallback(newHighlightedItem => {\n    messageBus.publish(HIGHLIGHT_CHANGE_TOPIC, newHighlightedItem);\n  }, [messageBus]);\n  const registerSelectionChangeHandler = React.useCallback(handler => {\n    return messageBus.subscribe(SELECTION_CHANGE_TOPIC, handler);\n  }, [messageBus]);\n  const registerHighlightChangeHandler = React.useCallback(handler => {\n    return messageBus.subscribe(HIGHLIGHT_CHANGE_TOPIC, handler);\n  }, [messageBus]);\n  return {\n    notifySelectionChanged,\n    notifyHighlightChanged,\n    registerSelectionChangeHandler,\n    registerHighlightChangeHandler\n  };\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nfunction areEqual(a, b) {\n  return a === b;\n}\nconst EMPTY_OBJECT = {};\nconst NOOP = () => {};\n\n/**\n * Gets the current state augmented with controlled values from the outside.\n * If a state item has a corresponding controlled value, it will be used instead of the internal state.\n */\nfunction getControlledState(internalState, controlledProps) {\n  const augmentedState = _extends({}, internalState);\n  Object.keys(controlledProps).forEach(key => {\n    if (controlledProps[key] !== undefined) {\n      augmentedState[key] = controlledProps[key];\n    }\n  });\n  return augmentedState;\n}\n/**\n * Defines an effect that compares the next state with the previous state and calls\n * the `onStateChange` callback if the state has changed.\n * The comparison is done based on the `stateComparers` parameter.\n */\nfunction useStateChangeDetection(parameters) {\n  const {\n    nextState,\n    initialState,\n    stateComparers,\n    onStateChange,\n    controlledProps,\n    lastActionRef\n  } = parameters;\n  const internalPreviousStateRef = React.useRef(initialState);\n  React.useEffect(() => {\n    if (lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n    const previousState = getControlledState(internalPreviousStateRef.current, controlledProps);\n    Object.keys(nextState).forEach(key => {\n      var _stateComparers$key;\n      // go through all state keys and compare them with the previous state\n      const stateComparer = (_stateComparers$key = stateComparers[key]) != null ? _stateComparers$key : areEqual;\n      const nextStateItem = nextState[key];\n      const previousStateItem = previousState[key];\n      if (previousStateItem == null && nextStateItem != null || previousStateItem != null && nextStateItem == null || previousStateItem != null && nextStateItem != null && !stateComparer(nextStateItem, previousStateItem)) {\n        var _event, _type;\n        onStateChange == null || onStateChange((_event = lastActionRef.current.event) != null ? _event : null, key, nextStateItem, (_type = lastActionRef.current.type) != null ? _type : '', nextState);\n      }\n    });\n    internalPreviousStateRef.current = nextState;\n    lastActionRef.current = null;\n  }, [internalPreviousStateRef, nextState, lastActionRef, onStateChange, stateComparers, controlledProps]);\n}\n\n/**\n * The alternative to `React.useReducer` that lets you control the state from the outside.\n *\n * It can be used in an uncontrolled mode, similar to `React.useReducer`, or in a controlled mode, when the state is controlled by the props.\n * It also supports partially controlled state, when some state items are controlled and some are not.\n *\n * The controlled state items are provided via the `controlledProps` parameter.\n * When a reducer action is dispatched, the internal state is updated with the new values.\n * A change event (`onStateChange`) is then triggered (for each changed state item) if the new state is different from the previous state.\n * This event can be used to update the controlled values.\n *\n * The comparison of the previous and next states is done using the `stateComparers` parameter.\n * If a state item has a corresponding comparer, it will be used to determine if the state has changed.\n * This is useful when the state item is an object and you want to compare only a subset of its properties or if it's an array and you want to compare its contents.\n *\n * An additional feature is the `actionContext` parameter. It allows you to add additional properties to every action object,\n * similarly to how React context is implicitly available to every component.\n *\n * @template State - The type of the state calculated by the reducer.\n * @template Action - The type of the actions that can be dispatched.\n * @template ActionContext - The type of the additional properties that will be added to every action object.\n *\n * @ignore - internal hook.\n */\nexport function useControllableReducer(parameters) {\n  const lastActionRef = React.useRef(null);\n  const {\n    reducer,\n    initialState,\n    controlledProps = EMPTY_OBJECT,\n    stateComparers = EMPTY_OBJECT,\n    onStateChange = NOOP,\n    actionContext\n  } = parameters;\n\n  // The reducer that is passed to React.useReducer is wrapped with a function that augments the state with controlled values.\n  const reducerWithControlledState = React.useCallback((state, action) => {\n    lastActionRef.current = action;\n    const controlledState = getControlledState(state, controlledProps);\n    const newState = reducer(controlledState, action);\n    return newState;\n  }, [controlledProps, reducer]);\n  const [nextState, dispatch] = React.useReducer(reducerWithControlledState, initialState);\n\n  // The action that is passed to dispatch is augmented with the actionContext.\n  const dispatchWithContext = React.useCallback(action => {\n    dispatch(_extends({}, action, {\n      context: actionContext\n    }));\n  }, [actionContext]);\n  useStateChangeDetection({\n    nextState,\n    initialState,\n    stateComparers: stateComparers != null ? stateComparers : EMPTY_OBJECT,\n    onStateChange: onStateChange != null ? onStateChange : NOOP,\n    controlledProps,\n    lastActionRef\n  });\n  return [getControlledState(nextState, controlledProps), dispatchWithContext];\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal hook.\n *\n * Initializes a ref with the given value and updates it when the value changes.\n *\n * @param value Value to store in the ref\n * @param deps An optional array of dependencies to watch for changes. If not provided, the ref will be updated each time the `value` changes.\n * @returns A React.RefObject containing the latest value\n *\n * API:\n *\n * - [useLatest API](https://mui.com/base-ui/api/use-latest/)\n */\nexport function useLatest(value, deps) {\n  const ref = React.useRef(value);\n  React.useEffect(() => {\n    ref.current = value;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps != null ? deps : [value]);\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst TEXT_NAVIGATION_RESET_TIMEOUT = 500; // milliseconds\n\n/**\n * @ignore - internal hook.\n *\n * Provides a handler for text navigation.\n * It's used to navigate a list by typing the first letters of the options.\n *\n * @param callback A function to be called when the navigation should be performed.\n * @returns A function to be used in a keydown event handler.\n */\nexport function useTextNavigation(callback) {\n  const textCriteriaRef = React.useRef({\n    searchString: '',\n    lastTime: null\n  });\n  return React.useCallback(event => {\n    if (event.key.length === 1 && event.key !== ' ') {\n      const textCriteria = textCriteriaRef.current;\n      const lowerKey = event.key.toLowerCase();\n      const currentTime = performance.now();\n      if (textCriteria.searchString.length > 0 && textCriteria.lastTime && currentTime - textCriteria.lastTime > TEXT_NAVIGATION_RESET_TIMEOUT) {\n        textCriteria.searchString = lowerKey;\n      } else if (textCriteria.searchString.length !== 1 || lowerKey !== textCriteria.searchString) {\n        // If there is just one character in the buffer and the key is the same, do not append\n        textCriteria.searchString += lowerKey;\n      }\n      textCriteria.lastTime = currentTime;\n      callback(textCriteria.searchString, event);\n    }\n  }, [callback]);\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { ListActionTypes } from './listActions.types';\nimport { listReducer as defaultReducer } from './listReducer';\nimport { useListChangeNotifiers } from './useListChangeNotifiers';\nimport { useControllableReducer } from '../utils/useControllableReducer';\nimport { areArraysEqual } from '../utils/areArraysEqual';\nimport { useLatest } from '../utils/useLatest';\nimport { useTextNavigation } from '../utils/useTextNavigation';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nconst EMPTY_OBJECT = {};\nconst NOOP = () => {};\nconst defaultItemComparer = (optionA, optionB) => optionA === optionB;\nconst defaultIsItemDisabled = () => false;\nconst defaultItemStringifier = item => typeof item === 'string' ? item : String(item);\nconst defaultGetInitialState = () => ({\n  highlightedValue: null,\n  selectedValues: []\n});\n\n/**\n * The useList is a lower-level utility that is used to build list-like components.\n * It's used to manage the state of the list and its items.\n *\n * Supports highlighting a single item and selecting an arbitrary number of items.\n *\n * The state of the list is managed by a controllable reducer - that is a reducer that can have its state\n * controlled from outside.\n *\n * By default, the state consists of `selectedValues` and `highlightedValue` but can be extended by the caller of the hook.\n * Also the actions that can be dispatched and the reducer function can be defined externally.\n *\n * @template ItemValue The type of the item values.\n * @template State The type of the list state. This should be a subtype of `ListState<ItemValue>`.\n * @template CustomAction The type of the actions that can be dispatched (besides the standard ListAction).\n * @template CustomActionContext The shape of additional properties that will be added to actions when dispatched.\n *\n * @ignore - internal hook.\n */\nfunction useList(params) {\n  const {\n    controlledProps = EMPTY_OBJECT,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    getInitialState = defaultGetInitialState,\n    getItemDomElement,\n    getItemId,\n    isItemDisabled = defaultIsItemDisabled,\n    rootRef: externalListRef,\n    onStateChange = NOOP,\n    items,\n    itemComparer = defaultItemComparer,\n    getItemAsString = defaultItemStringifier,\n    onChange,\n    onHighlightChange,\n    onItemsChange,\n    orientation = 'vertical',\n    pageSize = 5,\n    reducerActionContext = EMPTY_OBJECT,\n    selectionMode = 'single',\n    stateReducer: externalReducer\n  } = params;\n  if (process.env.NODE_ENV !== 'production') {\n    if (focusManagement === 'DOM' && getItemDomElement == null) {\n      throw new Error('useList: The `getItemDomElement` prop is required when using the `DOM` focus management.');\n    }\n    if (focusManagement === 'activeDescendant' && getItemId == null) {\n      throw new Error('useList: The `getItemId` prop is required when using the `activeDescendant` focus management.');\n    }\n  }\n  const listRef = React.useRef(null);\n  const handleRef = useForkRef(externalListRef, listRef);\n  const handleHighlightChange = React.useCallback((event, value, reason) => {\n    onHighlightChange == null || onHighlightChange(event, value, reason);\n    if (focusManagement === 'DOM' && value != null && (reason === ListActionTypes.itemClick || reason === ListActionTypes.keyDown || reason === ListActionTypes.textNavigation)) {\n      var _getItemDomElement;\n      getItemDomElement == null || (_getItemDomElement = getItemDomElement(value)) == null || _getItemDomElement.focus();\n    }\n  }, [getItemDomElement, onHighlightChange, focusManagement]);\n  const stateComparers = React.useMemo(() => ({\n    highlightedValue: itemComparer,\n    selectedValues: (valuesArray1, valuesArray2) => areArraysEqual(valuesArray1, valuesArray2, itemComparer)\n  }), [itemComparer]);\n\n  // This gets called whenever a reducer changes the state.\n  const handleStateChange = React.useCallback((event, field, value, reason, state) => {\n    onStateChange == null || onStateChange(event, field, value, reason, state);\n    switch (field) {\n      case 'highlightedValue':\n        handleHighlightChange(event, value, reason);\n        break;\n      case 'selectedValues':\n        onChange == null || onChange(event, value, reason);\n        break;\n      default:\n        break;\n    }\n  }, [handleHighlightChange, onChange, onStateChange]);\n\n  // The following object is added to each action when it's dispatched.\n  // It's accessible in the reducer via the `action.context` field.\n  const listActionContext = React.useMemo(() => {\n    return {\n      disabledItemsFocusable,\n      disableListWrap,\n      focusManagement,\n      isItemDisabled,\n      itemComparer,\n      items,\n      getItemAsString,\n      onHighlightChange: handleHighlightChange,\n      orientation,\n      pageSize,\n      selectionMode,\n      stateComparers\n    };\n  }, [disabledItemsFocusable, disableListWrap, focusManagement, isItemDisabled, itemComparer, items, getItemAsString, handleHighlightChange, orientation, pageSize, selectionMode, stateComparers]);\n  const initialState = getInitialState();\n  const reducer = externalReducer != null ? externalReducer : defaultReducer;\n  const actionContext = React.useMemo(() => _extends({}, reducerActionContext, listActionContext), [reducerActionContext, listActionContext]);\n  const [state, dispatch] = useControllableReducer({\n    reducer,\n    actionContext,\n    initialState: initialState,\n    controlledProps,\n    stateComparers,\n    onStateChange: handleStateChange\n  });\n  const {\n    highlightedValue,\n    selectedValues\n  } = state;\n  const handleTextNavigation = useTextNavigation((searchString, event) => dispatch({\n    type: ListActionTypes.textNavigation,\n    event,\n    searchString\n  }));\n\n  // introducing refs to avoid recreating the getItemState function on each change.\n  const latestSelectedValues = useLatest(selectedValues);\n  const latestHighlightedValue = useLatest(highlightedValue);\n  const previousItems = React.useRef([]);\n  React.useEffect(() => {\n    // Whenever the `items` object changes, we need to determine if the actual items changed.\n    // If they did, we need to dispatch an `itemsChange` action, so the selected/highlighted state is updated.\n    if (areArraysEqual(previousItems.current, items, itemComparer)) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemsChange,\n      event: null,\n      items,\n      previousItems: previousItems.current\n    });\n    previousItems.current = items;\n    onItemsChange == null || onItemsChange(items);\n  }, [items, itemComparer, dispatch, onItemsChange]);\n\n  // Subitems are notified of changes to the highlighted and selected values.\n  // This is not done via context because we don't want to trigger a re-render of all the subitems each time any of them changes state.\n  // Instead, we use a custom message bus to publish messages about changes.\n  // On the child component, we use a custom hook to subscribe to these messages and re-render only when the value they care about changes.\n  const {\n    notifySelectionChanged,\n    notifyHighlightChanged,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  } = useListChangeNotifiers();\n  React.useEffect(() => {\n    notifySelectionChanged(selectedValues);\n  }, [selectedValues, notifySelectionChanged]);\n  React.useEffect(() => {\n    notifyHighlightChanged(highlightedValue);\n  }, [highlightedValue, notifyHighlightChanged]);\n  const createHandleKeyDown = externalHandlers => event => {\n    var _externalHandlers$onK;\n    (_externalHandlers$onK = externalHandlers.onKeyDown) == null || _externalHandlers$onK.call(externalHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    const keysToPreventDefault = ['Home', 'End', 'PageUp', 'PageDown'];\n    if (orientation === 'vertical') {\n      keysToPreventDefault.push('ArrowUp', 'ArrowDown');\n    } else {\n      keysToPreventDefault.push('ArrowLeft', 'ArrowRight');\n    }\n    if (focusManagement === 'activeDescendant') {\n      // When the child element is focused using the activeDescendant attribute,\n      // the list handles keyboard events on its behalf.\n      // We have to `preventDefault()` is this case to prevent the browser from\n      // scrolling the view when space is pressed or submitting forms when enter is pressed.\n      keysToPreventDefault.push(' ', 'Enter');\n    }\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n    dispatch({\n      type: ListActionTypes.keyDown,\n      key: event.key,\n      event\n    });\n    handleTextNavigation(event);\n  };\n  const createHandleBlur = externalHandlers => event => {\n    var _externalHandlers$onB, _listRef$current;\n    (_externalHandlers$onB = externalHandlers.onBlur) == null || _externalHandlers$onB.call(externalHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if ((_listRef$current = listRef.current) != null && _listRef$current.contains(event.relatedTarget)) {\n      // focus remains within the list\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.blur,\n      event\n    });\n  };\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? getItemId(highlightedValue) : undefined,\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    }, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers)\n    });\n  };\n  const getItemState = React.useCallback(item => {\n    var _latestSelectedValues;\n    const index = items.findIndex(i => itemComparer(i, item));\n    const selected = ((_latestSelectedValues = latestSelectedValues.current) != null ? _latestSelectedValues : []).some(value => value != null && itemComparer(item, value));\n    const disabled = isItemDisabled(item, index);\n    const highlighted = latestHighlightedValue.current != null && itemComparer(item, latestHighlightedValue.current);\n    const focusable = focusManagement === 'DOM';\n    return {\n      disabled,\n      focusable,\n      highlighted,\n      index,\n      selected\n    };\n  }, [items, isItemDisabled, itemComparer, latestSelectedValues, latestHighlightedValue, focusManagement]);\n  const contextValue = React.useMemo(() => ({\n    dispatch,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  }), [dispatch, getItemState, registerHighlightChangeHandler, registerSelectionChangeHandler]);\n  React.useDebugValue({\n    state\n  });\n  return {\n    contextValue,\n    dispatch,\n    getRootProps,\n    rootRef: handleRef,\n    state\n  };\n}\nexport { useList };","import { generateUtilityClass } from '../generateUtilityClass';\nimport { generateUtilityClasses } from '../generateUtilityClasses';\nexport function getTabsListUtilityClass(slot) {\n  return generateUtilityClass('MuiTabsList', slot);\n}\nexport const tabsListClasses = generateUtilityClasses('MuiTabsList', ['root', 'horizontal', 'vertical']);","export const TabsListActionTypes = {\n  valueChange: 'valueChange'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { listReducer, ListActionTypes, moveHighlight } from '../useList';\nimport { TabsListActionTypes } from './useTabsList.types';\nexport function tabsListReducer(state, action) {\n  if (action.type === TabsListActionTypes.valueChange) {\n    return _extends({}, state, {\n      highlightedValue: action.value\n    });\n  }\n  const newState = listReducer(state, action);\n  const {\n    context: {\n      selectionFollowsFocus\n    }\n  } = action;\n  if (action.type === ListActionTypes.itemsChange) {\n    if (newState.selectedValues.length > 0) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValues[0]\n      });\n    }\n    moveHighlight(null, 'reset', action.context);\n  }\n  if (selectionFollowsFocus && newState.highlightedValue != null) {\n    return _extends({}, newState, {\n      selectedValues: [newState.highlightedValue]\n    });\n  }\n  return newState;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTabsContext } from '../Tabs';\nimport { TabsListActionTypes } from './useTabsList.types';\nimport { useCompoundParent } from '../utils/useCompound';\nimport { useList } from '../useList';\nimport { tabsListReducer } from './tabsListReducer';\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabsList API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tabs-list)\n */\nfunction useTabsList(parameters) {\n  var _selectedValues$;\n  const {\n    rootRef: externalRef\n  } = parameters;\n  const {\n    direction = 'ltr',\n    onSelected,\n    orientation = 'horizontal',\n    value,\n    registerTabIdLookup,\n    selectionFollowsFocus\n  } = useTabsContext();\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const tabIdLookup = React.useCallback(tabValue => {\n    var _subitems$get;\n    return (_subitems$get = subitems.get(tabValue)) == null ? void 0 : _subitems$get.id;\n  }, [subitems]);\n  registerTabIdLookup(tabIdLookup);\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getTabElement = React.useCallback(tabValue => {\n    var _subitems$get$ref$cur, _subitems$get2;\n    if (tabValue == null) {\n      return null;\n    }\n    return (_subitems$get$ref$cur = (_subitems$get2 = subitems.get(tabValue)) == null ? void 0 : _subitems$get2.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const isRtl = direction === 'rtl';\n  let listOrientation;\n  if (orientation === 'vertical') {\n    listOrientation = 'vertical';\n  } else {\n    listOrientation = isRtl ? 'horizontal-rtl' : 'horizontal-ltr';\n  }\n  const handleChange = React.useCallback((event, newValue) => {\n    var _newValue$;\n    onSelected(event, (_newValue$ = newValue[0]) != null ? _newValue$ : null);\n  }, [onSelected]);\n  const controlledProps = React.useMemo(() => {\n    if (value === undefined) {\n      return {};\n    }\n    return value != null ? {\n      selectedValues: [value]\n    } : {\n      selectedValues: []\n    };\n  }, [value]);\n  const isItemDisabled = React.useCallback(item => {\n    var _subitems$get$disable, _subitems$get3;\n    return (_subitems$get$disable = (_subitems$get3 = subitems.get(item)) == null ? void 0 : _subitems$get3.disabled) != null ? _subitems$get$disable : false;\n  }, [subitems]);\n  const {\n    contextValue: listContextValue,\n    dispatch,\n    getRootProps: getListboxRootProps,\n    state: {\n      highlightedValue,\n      selectedValues\n    },\n    rootRef: mergedRootRef\n  } = useList({\n    controlledProps,\n    disabledItemsFocusable: !selectionFollowsFocus,\n    focusManagement: 'DOM',\n    getItemDomElement: getTabElement,\n    isItemDisabled,\n    items: subitemKeys,\n    rootRef: externalRef,\n    onChange: handleChange,\n    orientation: listOrientation,\n    reducerActionContext: React.useMemo(() => ({\n      selectionFollowsFocus: selectionFollowsFocus || false\n    }), [selectionFollowsFocus]),\n    selectionMode: 'single',\n    stateReducer: tabsListReducer\n  });\n  React.useEffect(() => {\n    if (value === undefined) {\n      return;\n    }\n\n    // when a value changes externally, the highlighted value should be synced to it\n    if (value != null) {\n      dispatch({\n        type: TabsListActionTypes.valueChange,\n        value\n      });\n    }\n  }, [dispatch, value]);\n  const getRootProps = (externalProps = {}) => {\n    return _extends({}, externalProps, getListboxRootProps(externalProps), {\n      'aria-orientation': orientation === 'vertical' ? 'vertical' : undefined,\n      role: 'tablist'\n    });\n  };\n  const contextValue = React.useMemo(() => _extends({}, compoundComponentContextValue, listContextValue), [compoundComponentContextValue, listContextValue]);\n  return {\n    contextValue,\n    dispatch,\n    getRootProps,\n    highlightedValue,\n    isRtl,\n    orientation,\n    rootRef: mergedRootRef,\n    selectedValue: (_selectedValues$ = selectedValues[0]) != null ? _selectedValues$ : null\n  };\n}\nexport { useTabsList };","'use client';\n\nimport * as React from 'react';\nimport { ListContext } from '../useList/ListContext';\nimport { CompoundComponentContext } from '../utils/useCompound';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Sets up the contexts for the underlying Tab components.\n *\n * @ignore - do not document.\n */\nexport function TabsListProvider(props) {\n  const {\n    value,\n    children\n  } = props;\n  const {\n    dispatch,\n    getItemIndex,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler,\n    registerItem,\n    totalSubitemCount\n  } = value;\n  const listContextValue = React.useMemo(() => ({\n    dispatch,\n    getItemState,\n    getItemIndex,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  }), [dispatch, getItemIndex, getItemState, registerHighlightChangeHandler, registerSelectionChangeHandler]);\n  const compoundComponentContextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount\n  }), [registerItem, getItemIndex, totalSubitemCount]);\n  return /*#__PURE__*/_jsx(CompoundComponentContext.Provider, {\n    value: compoundComponentContextValue,\n    children: /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: listContextValue,\n      children: children\n    })\n  });\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils';\nimport { getTabsListUtilityClass } from './tabsListClasses';\nimport { useTabsList } from '../useTabsList';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { TabsListProvider } from '../useTabsList/TabsListProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation]\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabsListUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [TabsList API](https://mui.com/base-ui/react-tabs/components-api/#tabs-list)\n */\nconst TabsList = /*#__PURE__*/React.forwardRef(function TabsList(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isRtl,\n    orientation,\n    getRootProps,\n    contextValue\n  } = useTabsList({\n    rootRef: forwardedRef\n  });\n  const ownerState = _extends({}, props, {\n    isRtl,\n    orientation\n  });\n  const classes = useUtilityClasses(ownerState);\n  const TabsListRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const tabsListRootProps = useSlotProps({\n    elementType: TabsListRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabsListProvider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(TabsListRoot, _extends({}, tabsListRootProps, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TabsList.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside the TabsList.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TabsList.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { TabsList };"],"names":["useControlled","controlled","defaultProp","name","state","isControlled","React.useRef","valueState","setValue","React.useState","value","setValueIfUncontrolled","React.useCallback","newValue","areArraysEqual","array1","array2","itemComparer","a","b","index","getTabsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","useTabs","parameters","valueProp","defaultValue","onChange","orientation","direction","selectionFollowsFocus","onSelected","event","tabPanels","compoundComponentContextValue","useCompoundParent","tabIdLookup","getTabPanelId","tabValue","_tabPanels$get","getTabId","tabPanelId","registerTabIdLookup","lookupFunction","_extends","TabsProvider","props","children","getItemIndex","registerItem","totalSubitemCount","React.useMemo","tabsContextValue","_jsx","CompoundComponentContext","TabsContext","_excluded","useUtilityClasses","ownerState","composeClasses","useClassNamesOverride","Tabs","React.forwardRef","forwardedRef","_slots$root","slotProps","slots","other","_objectWithoutPropertiesLoose","contextValue","classes","TabsRoot","tabsRootProps","useSlotProps","findValidItemToHighlight","currentIndex","lookupDirection","items","includeDisabledItems","isItemDisabled","wrapAround","item","itemIndex","nextFocus","moveHighlight","previouslyHighlightedValue","offset","context","_items$nextIndex","disableListWrap","disabledItemsFocusable","focusManagement","defaultHighlightedIndex","maxIndex","previouslyHighlightedIndex","nextIndexCandidate","newIndex","nextIndex","toggleSelection","selectedValues","selectionMode","sv","handleItemSelection","i","newSelectedValues","handleKeyDown","key","previouslySelectedValue","pageSize","handleBlur","textCriteriaMatches","searchString","stringifyItem","_stringifyItem","text","handleTextNavigation","getItemAsString","startWithCurrentItem","nextItem","handleItemsChange","previousItems","_state$selectedValues","newHighlightedValue","_items$find","selectedValue","handleResetHighlight","listReducer","action","type","ListActionTypes","createMessageBus","listeners","subscribe","topic","callback","topicListeners","publish","args","useMessageBus","bus","SELECTION_CHANGE_TOPIC","HIGHLIGHT_CHANGE_TOPIC","useListChangeNotifiers","messageBus","notifySelectionChanged","newSelectedItems","notifyHighlightChanged","newHighlightedItem","registerSelectionChangeHandler","handler","registerHighlightChangeHandler","areEqual","EMPTY_OBJECT","NOOP","getControlledState","internalState","controlledProps","augmentedState","useStateChangeDetection","nextState","initialState","stateComparers","onStateChange","lastActionRef","internalPreviousStateRef","React.useEffect","previousState","_stateComparers$key","stateComparer","nextStateItem","previousStateItem","_event","_type","useControllableReducer","reducer","actionContext","reducerWithControlledState","controlledState","dispatch","React.useReducer","dispatchWithContext","useLatest","deps","ref","TEXT_NAVIGATION_RESET_TIMEOUT","useTextNavigation","textCriteriaRef","textCriteria","lowerKey","currentTime","defaultItemComparer","optionA","optionB","defaultIsItemDisabled","defaultItemStringifier","defaultGetInitialState","useList","params","getInitialState","getItemDomElement","getItemId","externalListRef","onHighlightChange","onItemsChange","reducerActionContext","externalReducer","listRef","handleRef","useForkRef","handleHighlightChange","reason","_getItemDomElement","valuesArray1","valuesArray2","handleStateChange","field","listActionContext","defaultReducer","highlightedValue","latestSelectedValues","latestHighlightedValue","createHandleKeyDown","externalHandlers","_externalHandlers$onK","keysToPreventDefault","createHandleBlur","_externalHandlers$onB","_listRef$current","getRootProps","externalProps","externalEventHandlers","extractEventHandlers","getItemState","_latestSelectedValues","selected","disabled","highlighted","React.useDebugValue","getTabsListUtilityClass","TabsListActionTypes","tabsListReducer","newState","useTabsList","_selectedValues$","externalRef","useTabsContext","subitems","_subitems$get","subitemKeys","getTabElement","_subitems$get$ref$cur","_subitems$get2","isRtl","listOrientation","handleChange","_newValue$","_subitems$get$disable","_subitems$get3","listContextValue","getListboxRootProps","mergedRootRef","TabsListProvider","ListContext","TabsList","TabsListRoot","tabsListRootProps"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}
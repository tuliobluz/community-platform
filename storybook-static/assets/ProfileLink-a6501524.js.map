{"version":3,"file":"ProfileLink-a6501524.js","sources":["../../src/ProfileLink/ProfileLink.tsx"],"sourcesContent":["import { Box, Flex } from 'theme-ui'\n\nimport { ExternalLink } from '../ExternalLink/ExternalLink'\nimport { Icon } from '../Icon/Icon'\n\nimport type { ThemeUICSSObject } from 'theme-ui'\nimport type { IGlyphs } from '../Icon/types'\n\nexport interface Props {\n  url: string\n  label: string\n  icon: keyof IGlyphs\n  sx?: ThemeUICSSObject\n}\n\nexport const capitalizeFirstLetter = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1)\n\n/**\n * Ensure urls are complete (start http/https://) and replace emails with mailto\n */\nconst rewriteUrl = (url: string, label: string) => {\n  switch (label) {\n    case 'email':\n      return `mailto:${url}`\n    default:\n      return url.indexOf('http') === 0 ? url : `http://${url}`\n  }\n}\n\nconst socialMediaNetworks = [\n  { pattern: new RegExp(/twitter\\.com/), label: 'Twitter' },\n  { pattern: new RegExp(/facebook\\.com/), label: 'Facebook' },\n  { pattern: new RegExp(/youtube\\.com/), label: 'Youtube' },\n  { pattern: new RegExp(/instagram\\.com/), label: 'Instagram' },\n]\n\nconst getLabelText = (label: string, url: string) => {\n  const matchedNetwork = socialMediaNetworks.find((network) =>\n    network.pattern.test(url),\n  )\n\n  if (matchedNetwork) {\n    return matchedNetwork.label\n  }\n\n  return label && capitalizeFirstLetter(label)\n}\n\nexport const ProfileLink = (props: Props) => {\n  const { url, label } = props\n  return (\n    <Flex\n      sx={{\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexDirection: 'row',\n        mt: 0,\n        ...props.sx,\n      }}\n    >\n      <Box>\n        <Icon glyph={props.icon} size={22} />\n      </Box>\n      <ExternalLink ml={2} color={'black'} href={rewriteUrl(url, label)}>\n        {getLabelText(label, url)}\n      </ExternalLink>\n    </Flex>\n  )\n}\n"],"names":["capitalizeFirstLetter","str","rewriteUrl","url","label","socialMediaNetworks","getLabelText","matchedNetwork","network","ProfileLink","props","jsxs","Flex","jsx","Box","Icon","ExternalLink"],"mappings":"4MAeO,MAAAA,EAAAC,GAAAA,EAAA,OAAA,CAAA,EAAA,cAAAA,EAAA,MAAA,CAAA,EAMPC,EAAA,CAAAC,EAAAC,IAAA,CACE,OAAAA,EAAA,CAAe,IAAA,QAEX,MAAA,UAAAD,IAAiB,QAEjB,OAAAA,EAAA,QAAA,MAAA,IAAA,EAAAA,EAAA,UAAAA,GAAmD,CAEzD,EAEAE,EAAA,CAA4B,CAAA,QAAA,IAAA,OAAA,cAAA,EAAA,MAAA,SAAA,EAC8B,CAAA,QAAA,IAAA,OAAA,eAAA,EAAA,MAAA,UAAA,EACE,CAAA,QAAA,IAAA,OAAA,cAAA,EAAA,MAAA,SAAA,EACF,CAAA,QAAA,IAAA,OAAA,gBAAA,EAAA,MAAA,WAAA,CAE1D,EAEAC,EAAA,CAAAF,EAAAD,IAAA,CACE,MAAAI,EAAAF,EAAA,KAA2CG,GAAAA,EAAA,QAAA,KAAAL,CAAA,CACjB,EAG1B,OAAAI,EACEA,EAAA,MAGFH,GAAAJ,EAAAI,CAAA,CACF,EAEOK,EAAAC,GAAA,CACL,KAAA,CAAA,IAAAP,EAAA,MAAAC,CAAA,EAAAM,EACA,OAAAC,EACEC,EAAC,CAAA,GAAA,CACK,eAAA,aACc,WAAA,SACJ,cAAA,MACG,GAAA,EACX,GAAAF,EAAA,EACK,EACX,SAAA,CAEAG,EAAAC,EAAA,CAAA,SAAAD,EAAAE,EAAA,CAAA,MAAAL,EAAA,KAAA,KAAA,EAAA,CAAA,CAAA,CAAA,EAEAG,EAAAG,EAAA,CAAA,GAAA,EAAA,MAAA,QAAA,KAAAd,EAAAC,EAAAC,CAAA,EAAA,SAAAE,EAAAF,EAAAD,CAAA,EAAA,CAGA,CAAA,CAAA,CAGN"}
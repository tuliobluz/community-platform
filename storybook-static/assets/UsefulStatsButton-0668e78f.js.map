{"version":3,"file":"UsefulStatsButton-0668e78f.js","sources":["../../src/UsefulStatsButton/UsefulStatsButton.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useTheme } from '@emotion/react'\nimport { Text } from 'theme-ui'\n\nimport { Button } from '../Button/Button'\nimport { Tooltip } from '../Tooltip/Tooltip'\n\nimport type { ThemeUIStyleObject } from 'theme-ui'\n\nexport interface IProps {\n  hasUserVotedUseful: boolean\n  votedUsefulCount: number | undefined\n  isLoggedIn: boolean\n  onUsefulClick: () => Promise<void>\n  sx?: ThemeUIStyleObject\n}\n\nexport const UsefulStatsButton = (props: IProps) => {\n  const theme: any = useTheme()\n  const navigate = useNavigate()\n\n  const [disabled, setDisabled] = useState<boolean>()\n\n  const handleUsefulClick = async () => {\n    setDisabled(true)\n    try {\n      await props.onUsefulClick()\n    } catch (err) {\n      // do nothing\n    }\n    setDisabled(false)\n  }\n\n  return (\n    <>\n      <Button\n        data-tip={props.isLoggedIn ? '' : 'Login to add your vote'}\n        data-cy={props.isLoggedIn ? 'vote-useful' : 'vote-useful-redirect'}\n        onClick={() =>\n          props.isLoggedIn ? handleUsefulClick() : navigate('/sign-in')\n        }\n        disabled={disabled}\n        sx={{\n          fontSize: 2,\n          backgroundColor: theme.colors.white,\n          py: 0,\n          '&:hover': {\n            backgroundColor: theme.colors.softblue,\n          },\n          ...props.sx,\n        }}\n        icon={props.hasUserVotedUseful ? 'star' : 'star-active'}\n      >\n        <Text\n          pr={2}\n          py={2}\n          sx={{\n            display: 'inline-block',\n          }}\n        >\n          {props.votedUsefulCount}\n        </Text>\n        <Text\n          pl={2}\n          py={2}\n          sx={{\n            display: 'inline-block',\n            borderLeft: `1px solid ${theme.colors.black}`,\n          }}\n        >\n          {props.hasUserVotedUseful ? 'Marked as useful' : 'Mark as useful'}\n        </Text>\n      </Button>\n      <Tooltip />\n    </>\n  )\n}\n"],"names":["UsefulStatsButton","props","theme","useTheme","navigate","useNavigate","disabled","setDisabled","useState","handleUsefulClick","jsxs","Fragment","Button","jsx","Text","Tooltip"],"mappings":"gWAkBO,MAAAA,EAAAC,GAAA,CACL,MAAAC,EAAAC,IACAC,EAAAC,IAEA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAEAC,EAAA,SAAA,CACEF,EAAA,EAAA,EACA,GAAA,CACE,MAAAN,EAAA,eAA0B,MAAA,CAC1B,CAGFM,EAAA,EAAA,CAAiB,EAGnB,OAAAG,EAAAC,EAAA,CAAA,SAAA,CAEID,EAAAE,EAAC,CAAA,WAAAX,EAAA,WAAA,GAAA,yBACmC,UAAAA,EAAA,WAAA,cAAA,uBACU,QAAA,IAAAA,EAAA,WAAAQ,EAAA,EAAAL,EAAA,UAAA,EAEkB,SAAAE,EAE9D,GAAA,CACI,SAAA,EACQ,gBAAAJ,EAAA,OAAA,MACoB,GAAA,EAC1B,UAAA,CACO,gBAAAA,EAAA,OAAA,QACqB,EAChC,GAAAD,EAAA,EACS,EACX,KAAAA,EAAA,mBAAA,OAAA,cAC0C,SAAA,CAE1CY,EAAAC,EAAC,CAAA,GAAA,EACK,GAAA,EACA,GAAA,CACA,QAAA,cACO,EACX,SAAAb,EAAA,gBAEO,CAAA,EACTY,EACAC,EAAC,CAAA,GAAA,EACK,GAAA,EACA,GAAA,CACA,QAAA,eACO,WAAA,aAAAZ,EAAA,OAAA,OAC6B,EACxC,SAAAD,EAAA,mBAAA,mBAAA,gBAEiD,CAAA,CACnD,CAAA,CAAA,EACFY,EAAAE,EAAA,EAAA,CACS,CAAA,CAAA,CAGf"}
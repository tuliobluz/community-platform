{"version":3,"file":"FieldDatepicker-b06f681f.js","sources":["../../src/FieldDatepicker/FieldDatepicker.tsx"],"sourcesContent":["import { Input, Text } from 'theme-ui'\n\nimport type { FieldRenderProps } from 'react-final-form'\n\n// any props can be passed to field and down to child component\n// input and meta props come from react field render props and will be\n// picked up by typing\ntype FieldProps = FieldRenderProps<any, any> & { children?: React.ReactNode }\n\nexport interface Props extends FieldProps {\n  // additional fields intending to pass down\n  disabled?: boolean\n  children?: React.ReactNode\n  'data-cy'?: string\n  customOnBlur?: (event: any) => void\n  customChange?: (location: any) => void\n}\n\nexport const FieldDatepicker = ({\n  input,\n  meta,\n  customChange,\n  ...rest\n}: Props) => {\n  return (\n    <>\n      <Input\n        type=\"date\"\n        variant={meta.error && meta.touched ? 'error' : 'input'}\n        {...input}\n        {...rest}\n        onChange={(date) => {\n          input.onChange(date)\n          if (customChange) {\n            customChange(date)\n          }\n          input.onBlur()\n        }}\n      />\n      {meta.error && meta.touched ? (\n        <Text sx={{ fontSize: 0, margin: 1, color: 'error' }}>\n          {meta.error}\n        </Text>\n      ) : null}\n    </>\n  )\n}\n"],"names":["FieldDatepicker","input","meta","customChange","rest","jsxs","Fragment","jsx","Input","date","Text"],"mappings":"6HAkBO,MAAAA,EAAA,CAAA,CAAyB,MAAAC,EAC9B,KAAAC,EACA,aAAAC,EACA,GAAAC,CAEF,IACEC,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAC,CAAA,KAAA,OACM,QAAAN,EAAA,OAAAA,EAAA,QAAA,QAAA,QAC2C,GAAAD,EAC5C,GAAAG,EACA,SAAAK,GAAA,CAEFR,EAAA,SAAAQ,CAAA,EACAN,GACEA,EAAAM,CAAA,EAEFR,EAAA,OAAA,CAAa,CACf,CAAA,EACFC,EAAA,OAAAA,EAAA,QAAAK,EAAAG,EAAA,CAAA,GAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,OAAA,EAAA,SAAAR,EAAA,KAAA,CAAA,EAAA,IAKI,CAAA,CAAA"}
{"version":3,"file":"Button-c1e2a791.js","sources":["../../src/Button/Button.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Button as ThemeUiButton, Flex, Text } from 'theme-ui'\n\nimport { Icon } from '../Icon/Icon'\n\nimport type { ButtonProps as ThemeUiButtonProps } from 'theme-ui'\nimport type { IGlyphs } from '../Icon/types'\n\n// extend to allow any default button props (e.g. onClick) to also be passed\nexport interface IBtnProps extends React.ButtonHTMLAttributes<HTMLElement> {\n  icon?: keyof IGlyphs\n  disabled?: boolean\n  small?: boolean\n  large?: boolean\n  showIconOnly?: boolean\n  iconColor?: string\n}\n\ntype ToArray<Type> = [Type] extends [any] ? Type[] : never\ntype AvailableButtonProps = ToArray<keyof BtnProps>\n\nconst buttonSizeProps: { [key: string]: any } = {\n  small: {\n    px: 2,\n    py: 1,\n    pl: 7,\n    fontSize: 1,\n    height: '2rem',\n  },\n  default: {\n    px: 3,\n    pl: 9,\n  },\n  large: {\n    px: 4,\n    py: 3,\n    pl: 10,\n    fontSize: 4,\n    height: '3.5rem',\n  },\n}\n\nexport type BtnProps = IBtnProps & ThemeUiButtonProps\n\nfunction getSizeProps(size: string, hasIcon: boolean) {\n  if (!buttonSizeProps[`${size}`] && !hasIcon) {\n    return {}\n  }\n\n  if (!buttonSizeProps[`${size}`] && hasIcon) {\n    return {\n      px: 3,\n      pl: 9,\n    }\n  }\n\n  const sizeProps = { ...buttonSizeProps[`${size}`] }\n\n  if (!hasIcon) {\n    delete sizeProps.pl\n  }\n\n  return sizeProps\n}\n\nfunction getScaleTransform(size: string) {\n  if (size === 'large') {\n    return 1.25\n  }\n\n  return 1\n}\n\nfunction sanitizedProps(obj: BtnProps, keysToRemove: AvailableButtonProps) {\n  const sanitizedObj = { ...obj }\n\n  keysToRemove.forEach((prop) => {\n    if (sanitizedObj[prop]) {\n      delete sanitizedObj[prop]\n    }\n  })\n\n  return sanitizedObj\n}\n\nexport const Button = (props: BtnProps) => {\n  const [size] = Object.keys(props).filter((prop) =>\n    Object.prototype.hasOwnProperty.call(buttonSizeProps, prop),\n  )\n\n  return (\n    <ThemeUiButton\n      {...sanitizedProps(props, [\n        'small',\n        'large',\n        'showIconOnly',\n        'iconColor',\n      ])}\n      sx={{\n        ...props.sx,\n        ...getSizeProps(size, !!props.icon),\n        ...(props.showIconOnly ? { pr: 0 } : {}),\n      }}\n    >\n      {props.icon && (\n        <Flex\n          aria-hidden={true}\n          sx={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            px: getSizeProps(size, !!props.icon)?.px || 0,\n            boxSizing: 'border-box',\n            fontSize: 0,\n            maxWidth: '100%',\n            lineHeight: 0,\n            transform: `translateY(-1px) scale(${getScaleTransform(size)})`,\n            pointerEvents: 'none',\n          }}\n        >\n          <Icon glyph={props.icon} color={props.iconColor} />\n        </Flex>\n      )}\n      <Text\n        sx={{\n          ...(props.showIconOnly\n            ? {\n                clipPath: 'inset(100%)',\n                clip: 'rect(1px, 1px, 1px, 1px)',\n                height: '1px',\n                overflow: 'hidden',\n                position: 'absolute',\n                whiteSpace: 'nowrap',\n                width: '1px',\n              }\n            : {}),\n        }}\n      >\n        {props.children}\n      </Text>\n    </ThemeUiButton>\n  )\n}\n\nButton.defaultProps = {\n  type: 'button',\n}\n"],"names":["buttonSizeProps","getSizeProps","size","hasIcon","sizeProps","getScaleTransform","sanitizedProps","obj","keysToRemove","sanitizedObj","prop","Button","props","jsxs","ThemeUiButton","jsx","Flex","_a","Icon","Text"],"mappings":"oKAqBA,MAAAA,EAAA,CAAgD,MAAA,CACvC,GAAA,EACD,GAAA,EACA,GAAA,EACA,SAAA,EACM,OAAA,MACF,EACV,QAAA,CACS,GAAA,EACH,GAAA,CACA,EACN,MAAA,CACO,GAAA,EACD,GAAA,EACA,GAAA,GACA,SAAA,EACM,OAAA,QACF,CAEZ,EAIA,SAAAC,EAAAC,EAAAC,EAAA,CACE,GAAA,CAAAH,EAAA,GAAAE,GAAA,GAAA,CAAAC,EACE,MAAA,GAGF,GAAA,CAAAH,EAAA,GAAAE,GAAA,GAAAC,EACE,MAAA,CAAO,GAAA,EACD,GAAA,CACA,EAIR,MAAAC,EAAA,CAAA,GAAAJ,EAAA,GAAAE,GAAA,GAEA,OAAAC,GACE,OAAAC,EAAA,GAGFA,CACF,CAEA,SAAAC,EAAAH,EAAA,CACE,OAAAA,IAAA,QACE,KAGF,CACF,CAEA,SAAAI,EAAAC,EAAAC,EAAA,CACE,MAAAC,EAAA,CAAA,GAAAF,GAEA,OAAAC,EAAA,QAAAE,GAAA,CACED,EAAAC,CAAA,GACE,OAAAD,EAAAC,CAAA,CACF,CAAA,EAGFD,CACF,CAEO,MAAAE,EAAAC,GAAA,OACL,KAAA,CAAAV,CAAA,EAAA,OAAA,KAAAU,CAAA,EAAA,OAAkCF,GAAA,OAAA,UAAA,eAAA,KAAAV,EAAAU,CAAA,CAC0B,EAG5D,OAAAG,EACEC,EAAC,CAAA,GAAAR,EAAAM,EAAA,CAC2B,QACxB,QACA,eACA,WACA,CAAA,EACD,GAAA,CACG,GAAAA,EAAA,GACO,GAAAX,EAAAC,EAAA,CAAA,CAAAU,EAAA,IAAA,EACyB,GAAAA,EAAA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CACI,EACxC,SAAA,CAECA,EAAA,MAAAG,EACCC,EAAC,CAAA,cAAA,GACc,GAAA,CACT,SAAA,WACQ,IAAA,EACL,KAAA,EACC,OAAA,OACE,cAAA,SACO,eAAA,SACC,WAAA,SACJ,KAAAC,EAAAhB,EAAAC,EAAA,CAAA,CAAAU,EAAA,IAAA,IAAA,YAAAK,EAAA,KAAA,EACgC,UAAA,aACjC,SAAA,EACD,SAAA,OACA,WAAA,EACE,UAAA,0BAAAZ,EAAAH,CAAA,KAC+C,cAAA,MAC5C,EACjB,SAAAa,EAAAG,EAAA,CAAA,MAAAN,EAAA,KAAA,MAAAA,EAAA,UAAA,CAEiD,CAAA,EACnDG,EAEFI,EAAC,CAAA,GAAA,CACK,GAAAP,EAAA,aAAA,CAEE,SAAA,cACY,KAAA,2BACJ,OAAA,MACE,SAAA,SACE,SAAA,WACA,WAAA,SACE,MAAA,KACL,EAAA,CAAA,CAER,EACP,SAAAA,EAAA,QAEO,CAAA,CACT,CAAA,CAAA,CAGN,EAEAD,EAAA,aAAA,CAAsB,KAAA,QAEtB"}
{"version":3,"file":"CommentList-836a4886.js","sources":["../../src/CommentList/CommentList.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { Box, Flex } from 'theme-ui'\n\nimport { Button } from '../Button/Button'\nimport { ButtonShowReplies } from '../ButtonShowReplies/ButtonShowReplies'\nimport { CommentItem } from '../CommentItem/CommentItem'\nimport { CreateReply } from '../CreateReply/CreateReply'\nimport { Icon } from '../Icon/Icon'\n\nimport type { IComment } from '../CommentItem/types'\n\nconst MAX_COMMENTS = 5\n\ninterface IPropsShared {\n  handleDelete: (_id: string) => Promise<void>\n  handleEdit: (_id: string, comment: string) => Promise<void>\n  handleEditRequest: () => Promise<void>\n  isLoggedIn: boolean\n  isReplies: boolean\n  maxLength: number\n  onSubmitReply?: (_id: string, reply: string) => Promise<void>\n  showAvatar: boolean\n}\n\nexport interface IPropsCommentContainer extends IPropsShared {\n  comment: IComment\n  handleCommentReply?: (commentId: string | null) => void\n  supportReplies: boolean\n}\n\nexport interface IPropsCommentList extends IPropsShared {\n  supportReplies?: boolean\n  comments: IComment[]\n  highlightedCommentId?: string\n  onMoreComments?: () => void\n  setCommentBeingRepliedTo?: (commentId: string | null) => void\n}\n\nexport const CommentContainer = (props: IPropsCommentContainer) => {\n  const [isShowReplies, setIsShowReplies] = useState(false)\n  const {\n    comment,\n    handleDelete,\n    handleEditRequest,\n    handleEdit,\n    supportReplies,\n    isLoggedIn,\n    isReplies,\n    maxLength,\n    onSubmitReply,\n    showAvatar,\n  } = props\n  const { _id, creatorName, replies } = comment\n\n  const replyArrow = () => {\n    return (\n      <Box\n        sx={{\n          paddingTop: 1,\n          paddingRight: 2,\n        }}\n      >\n        <Icon glyph=\"arrow-curved-bottom-right\" />\n      </Box>\n    )\n  }\n\n  const repliesButton = () => {\n    return (\n      <ButtonShowReplies\n        creatorName={creatorName}\n        isShowReplies={isShowReplies}\n        replies={replies || []}\n        setIsShowReplies={() => setIsShowReplies(!isShowReplies)}\n      />\n    )\n  }\n\n  const createReply = () => {\n    if (onSubmitReply) {\n      return (\n        <CreateReply\n          commentId={_id}\n          isLoggedIn={isLoggedIn}\n          maxLength={maxLength}\n          onSubmit={onSubmitReply}\n        />\n      )\n    }\n  }\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'white',\n        borderRadius: 1,\n        padding: isReplies ? 0 : 2,\n      }}\n    >\n      <CommentItem\n        comment={comment}\n        handleEditRequest={handleEditRequest}\n        handleDelete={handleDelete}\n        handleEdit={handleEdit}\n        isReply={isReplies ? true : false}\n        showAvatar={showAvatar}\n      />\n\n      {supportReplies && !isShowReplies && repliesButton()}\n\n      {supportReplies && isShowReplies ? (\n        <Flex\n          sx={{\n            alignItems: 'stretch',\n            flexDirection: 'row',\n          }}\n        >\n          {replies && replyArrow()}\n\n          <Flex\n            sx={{\n              alignItems: 'stretch',\n              flexDirection: 'column',\n              flex: 1,\n            }}\n          >\n            <CommentList\n              comments={replies || []}\n              handleDelete={handleDelete}\n              handleEdit={handleEdit}\n              handleEditRequest={handleEditRequest}\n              isLoggedIn={isLoggedIn}\n              isReplies={true}\n              maxLength={maxLength}\n              supportReplies={false}\n              showAvatar={showAvatar}\n            />\n\n            {createReply()}\n\n            {repliesButton()}\n          </Flex>\n        </Flex>\n      ) : null}\n    </Box>\n  )\n}\n\nexport const CommentList = (props: IPropsCommentList) => {\n  const {\n    comments,\n    handleDelete,\n    handleEdit,\n    handleEditRequest,\n    highlightedCommentId,\n    isLoggedIn,\n    isReplies,\n    maxLength,\n    onMoreComments,\n    onSubmitReply,\n    showAvatar,\n    supportReplies = false,\n  } = props\n\n  const [moreComments, setMoreComments] = useState(1)\n  const shownComments = moreComments * MAX_COMMENTS\n\n  const scrollIntoRelevantComment = (commentId: string) => {\n    setTimeout(() => {\n      // the delay is needed, otherwise the scroll is not happening in Firefox\n      document\n        .getElementById(`comment:${commentId}`)\n        ?.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }, 0)\n  }\n\n  const handleMoreComments = () => {\n    onMoreComments && onMoreComments()\n    setMoreComments(moreComments + 1)\n  }\n\n  useEffect(() => {\n    if (!highlightedCommentId) return\n\n    const i = comments.findIndex((comment) =>\n      highlightedCommentId.includes(comment._id),\n    )\n    if (i >= 0) {\n      setMoreComments(Math.floor(i / MAX_COMMENTS) + 1)\n      scrollIntoRelevantComment(highlightedCommentId)\n    }\n  }, [highlightedCommentId, comments])\n\n  return (\n    <Flex\n      sx={{\n        gap: 2,\n        flexDirection: 'column',\n      }}\n    >\n      {comments &&\n        comments.slice(0, shownComments).map((comment) => (\n          <Box\n            key={comment._id}\n            data-testid=\"CommentList: item\"\n            sx={{\n              border: `${\n                highlightedCommentId === comment._id\n                  ? '2px dashed black'\n                  : 'none'\n              }`,\n              borderRadius: 1,\n            }}\n          >\n            <CommentContainer\n              comment={comment}\n              handleEditRequest={handleEditRequest}\n              handleDelete={handleDelete}\n              handleEdit={handleEdit}\n              isLoggedIn={isLoggedIn}\n              isReplies={isReplies}\n              maxLength={maxLength}\n              onSubmitReply={onSubmitReply}\n              supportReplies={supportReplies}\n              showAvatar={showAvatar}\n            />\n          </Box>\n        ))}\n\n      {comments && comments.length > shownComments && (\n        <Flex>\n          <Button\n            sx={{\n              margin: '0 auto',\n            }}\n            variant=\"outline\"\n            onClick={handleMoreComments}\n          >\n            show more comments\n          </Button>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n"],"names":["MAX_COMMENTS","CommentContainer","props","isShowReplies","setIsShowReplies","useState","comment","handleDelete","handleEditRequest","handleEdit","supportReplies","isLoggedIn","isReplies","maxLength","onSubmitReply","showAvatar","_id","creatorName","replies","replyArrow","jsx","Box","Icon","repliesButton","ButtonShowReplies","createReply","CreateReply","jsxs","CommentItem","Flex","CommentList","comments","highlightedCommentId","onMoreComments","moreComments","setMoreComments","shownComments","scrollIntoRelevantComment","commentId","_a","handleMoreComments","useEffect","i","Button"],"mappings":"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"}
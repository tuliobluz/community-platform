{"version":3,"file":"DonationRequest-a51fa2f8.js","sources":["../../src/DonationRequest/DonationRequest.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { AspectImage, Card, Flex, Text } from 'theme-ui'\n\nimport { Button } from '../Button/Button'\nimport { ExternalLink } from '../ExternalLink/ExternalLink'\n\nexport interface IProps {\n  body: string\n  callback: () => void\n  iframeSrc: string\n  imageURL: string\n  link: string\n}\n\nconst REQUEST_TITLE = 'Support our work'\nconst REQUEST_THANKYOU = 'Thank you for helping to make this possible'\nexport const REQUEST_BUTTON_SKIP = 'Skip this time'\nexport const REQUEST_BUTTON_DOWNLOAD = 'Download Now!'\n\nexport const DonationRequest = (props: IProps) => {\n  const { body, callback, iframeSrc, imageURL, link } = props\n  const [isStartDownload, setIsStartDownload] = useState<boolean>(false)\n  const iframeArgs = {\n    allowpaymentrequest: 'allowpaymentrequest',\n    allow: 'payment',\n    'data-donorbox-id': 'DonorBox-f2',\n    'data-testid': 'donationRequestIframe',\n    frameBorder: '0',\n    name: 'donorbox',\n    seamless: true,\n    src: iframeSrc,\n  }\n\n  const handleMessage = (event: MessageEvent) => {\n    if (event.origin != window.location.origin) {\n      return\n    }\n\n    switch (event.data) {\n      case 'CAN_START_FILE_DOWNLOAD':\n        setIsStartDownload(true)\n        window.open(link)\n        break\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage)\n    return () => window.removeEventListener('message', handleMessage)\n  }, [])\n\n  return (\n    <Card\n      sx={{\n        overflowY: 'scroll',\n        scrollbarWidth: 'none',\n        msOverflowStyle: 'none',\n      }}\n      data-cy=\"DonationRequest\"\n      data-testid=\"DonationRequest\"\n    >\n      <script\n        src=\"https://donorbox.org/widget.js\"\n        data-paypalexpress=\"false\"\n      ></script>\n\n      <Flex\n        sx={{\n          flexDirection: ['column', 'row'],\n        }}\n      >\n        <Flex sx={{ flexDirection: 'column', flex: 1 }}>\n          <Flex sx={{ display: ['none', 'inline'] }}>\n            <AspectImage\n              loading=\"lazy\"\n              ratio={16 / 7}\n              src={imageURL}\n              alt={REQUEST_TITLE}\n              data-testid=\"donationRequestImage\"\n            />\n          </Flex>\n\n          <Text sx={{ padding: [2, 4, 6] }}>\n            <Text as=\"h1\">{REQUEST_TITLE}</Text>\n            <p>{body}</p>\n            <p>{REQUEST_THANKYOU}</p>\n          </Text>\n        </Flex>\n\n        <Flex\n          sx={{\n            borderLeft: [0, '2px solid'],\n            minHeight: [isStartDownload ? '400px' : '650px', '650px'],\n            width: ['100%', '350px', '400px'],\n          }}\n        >\n          <iframe\n            {...iframeArgs}\n            loading=\"lazy\"\n            style={{ border: '0', overflow: 'scroll', width: '100%' }}\n          ></iframe>\n        </Flex>\n      </Flex>\n\n      <Flex\n        sx={{\n          backgroundColor: 'offwhite',\n          borderTop: '2px solid',\n          flexDirection: ['column', 'row'],\n          padding: 2,\n          gap: 2,\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        {isStartDownload && (\n          <Text as=\"p\" sx={{ color: 'grey', textAlign: 'center' }}>\n            Download hasn't started yet? Tap the button\n          </Text>\n        )}\n\n        <ExternalLink\n          href={link}\n          onClick={callback}\n          data-cy=\"DonationRequestSkip\"\n        >\n          <Button>\n            {isStartDownload ? REQUEST_BUTTON_DOWNLOAD : REQUEST_BUTTON_SKIP}\n          </Button>\n        </ExternalLink>\n      </Flex>\n    </Card>\n  )\n}\n"],"names":["REQUEST_TITLE","REQUEST_THANKYOU","REQUEST_BUTTON_SKIP","REQUEST_BUTTON_DOWNLOAD","DonationRequest","props","body","callback","iframeSrc","imageURL","link","isStartDownload","setIsStartDownload","useState","iframeArgs","handleMessage","event","useEffect","jsxs","Card","jsx","Flex","AspectImage","Text","ExternalLink","Button"],"mappings":"oQAcA,MAAAA,EAAA,mBACAC,EAAA,8CACOC,EAAA,iBACAC,EAAA,gBAEAC,EAAAC,GAAA,CACL,KAAA,CAAA,KAAAC,EAAA,SAAAC,EAAA,UAAAC,EAAA,SAAAC,EAAA,KAAAC,CAAA,EAAAL,EACA,CAAAM,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAA,CAAmB,oBAAA,sBACI,MAAA,UACd,mBAAA,cACa,cAAA,wBACL,YAAA,IACF,KAAA,WACP,SAAA,GACI,IAAAN,CACL,EAGPO,EAAAC,GAAA,CACE,GAAAA,EAAA,QAAA,OAAA,SAAA,OAIA,OAAAA,EAAA,KAAA,CAAoB,IAAA,0BAEhBJ,EAAA,EAAA,EACA,OAAA,KAAAF,CAAA,EACA,KAAA,CACJ,EAGFO,OAAAA,EAAAA,UAAA,KACE,OAAA,iBAAA,UAAAF,CAAA,EACA,IAAA,OAAA,oBAAA,UAAAA,CAAA,GAAgE,CAAA,CAAA,EAGlEG,EACEC,EAAC,CAAA,GAAA,CACK,UAAA,SACS,eAAA,OACK,gBAAA,MACC,EACnB,UAAA,kBACQ,cAAA,kBACI,SAAA,CAEZC,EAAA,SAAC,CAAA,IAAA,iCACK,qBAAA,OACe,CAAA,EACpBF,EAEDG,EAAC,CAAA,GAAA,CACK,cAAA,CAAA,SAAA,KAAA,CAC6B,EACjC,SAAA,CAEAH,EAAAG,EAAA,CAAA,GAAA,CAAA,cAAA,SAAA,KAAA,CAAA,EAAA,SAAA,CACED,EAAAC,EAAA,CAAA,GAAA,CAAA,QAAA,CAAA,OAAA,QAAA,GAAA,SAAAD,EACEE,EAAC,CAAA,QAAA,OACS,MAAA,GAAA,EACI,IAAAb,EACP,IAAAT,EACA,cAAA,sBACO,CAAA,EAAA,EAEhBkB,EAAAK,EAAA,CAAA,GAAA,CAAA,QAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,SAAA,CAGEH,EAAAG,EAAA,CAAA,GAAA,KAAA,SAAAvB,EAAA,EAA6BoB,EAAA,IAAA,CAAA,SAAAd,CAAA,CAAA,EACpBc,EAAA,IAAA,CAAA,SAAAnB,CAAA,CAAA,CACY,EAAA,CACvB,EAAA,EACFmB,EAEAC,EAAC,CAAA,GAAA,CACK,WAAA,CAAA,EAAA,WAAA,EACyB,UAAA,CAAAV,EAAA,QAAA,QAAA,OAAA,EAC6B,MAAA,CAAA,OAAA,QAAA,OAAA,CACxB,EAClC,SAAAS,EAEA,SAAC,CAAA,GAAAN,EACK,QAAA,OACI,MAAA,CAAA,OAAA,IAAA,SAAA,SAAA,MAAA,MAAA,CACgD,CAAA,CACzD,CAAA,CACH,CAAA,CAAA,EACFI,EAEAG,EAAC,CAAA,GAAA,CACK,gBAAA,WACe,UAAA,YACN,cAAA,CAAA,SAAA,KAAA,EACoB,QAAA,EACtB,IAAA,EACJ,eAAA,WACW,WAAA,QACJ,EACd,SAAA,CAECV,GAAAS,EAAAG,EAAA,CAAA,GAAA,IAAA,GAAA,CAAA,MAAA,OAAA,UAAA,QAAA,EAAA,SAAA,6CAAA,CAAA,EAGCH,EAGFI,EAAC,CAAA,KAAAd,EACO,QAAAH,EACG,UAAA,sBACD,SAAAa,EAAAK,EAAA,CAAA,SAAAd,EAAAR,EAAAD,EAAA,CAIR,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAGN"}